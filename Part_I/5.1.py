'''Запросить у пользователя ввод IP-сети в формате: 10.1.1.0/24

Затем вывести информацию о сети и маске в таком формате:

Network:
10        1         1         0
00001010  00000001  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000
'''

DICT_MASKS = {
  '0' : '0.0.0.0', '1' : '128.0.0.0', '2' : '192.0.0.0', '3' : '224.0.0.0',
  '4' : '240.0.0.0', '5' : '248.0.0.0', '6' : '252.0.0.0', '7' : '254.0.0.0', '8' : '255.0.0.0', '9' : '255.128.0.0', '10' : '255.192.0.0', '11' : '255.224.0.0', 
  '12' : '255.240.0.0', '13' : '255.248.0.0', '14' : '255.252.0.0', '15' : '255.254.0.0', 
  '16' : '255.255.0.0', '17' : '255.255.128.0', '18' : '255.255.192.0', '19' : '255.255.224.0', 
  '20' : '255.255.240.0', '21' : '255.255.248.0', '22' : '255.255.252.0', '23' : '255.255.254.0', 
  '24' : '255.255.255.0', '25' : '255.255.255.128', '26' : '255.255.255.192', '27' : '255.255.255.224', 
  '28' : '255.255.255.240', '29' : '255.255.255.248', '30' : '255.255.255.252', '31' : '255.255.255.254', '32' : '255.255.255.255', 
  }



IP = input('Network/mask?').split('/')
IP_ADDR = IP[0].split('.')
IP_ADDR = [int(i)for i in IP_ADDR]
print (IP_ADDR)
IP_MASK = IP[1]
IP_MASK = (DICT_MASKS[IP_MASK]).split('.')
IP_MASK = [int(i)for i in IP_MASK]
print (IP_MASK)

RESULT = '''
Network:
{0:<8} {1:<8} {2:<8} {3:<8}
{0:>08b} {1:>08b} {2:>08b} {3:>08b}
Mask:
/{4}
{5:<8} {6:<8} {7:<8} {8:<8}
{5:>08b} {6:>08b} {7:>08b} {8:>08b}
'''
print (RESULT.format(IP_ADDR[0], IP_ADDR[1], IP_ADDR[2], IP_ADDR[3], IP[1], IP_MASK[0], IP_MASK[1], IP_MASK[2], IP_MASK[3], ))
